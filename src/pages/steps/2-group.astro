---
import Layout from '../../layouts/Layout.astro'
---

<Layout>
  <div class="image-stack">
    <img src="/01.webp" class="image-item" alt="image" />
    <img src="/02.webp" class="image-item" alt="image" />
    <img src="/03.webp" class="image-item" alt="image" />
    <img src="/04.webp" class="image-item" alt="image" />
    <img src="/05.webp" class="image-item" alt="image" />
    <img src="/06.webp" class="image-item" alt="image" />
    <img src="/07.webp" class="image-item" alt="image" />
    <img src="/08.webp" class="image-item" alt="image" />
    <img src="/09.webp" class="image-item" alt="image" />
    <img src="/10.webp" class="image-item" alt="image" />
    <img src="/11.webp" class="image-item" alt="image" />
    <img src="/12.webp" class="image-item" alt="image" />
    <img src="/13.webp" class="image-item" alt="image" />
    <img src="/14.webp" class="image-item" alt="image" />
    <img src="/15.webp" class="image-item" alt="image" />
    <img src="/16.webp" class="image-item" alt="image" />
    <img src="/17.webp" class="image-item" alt="image" />
    <img src="/18.webp" class="image-item" alt="image" />
    <img src="/19.webp" class="image-item" alt="image" />
    <img src="/20.webp" class="image-item" alt="image" />
    <img src="/21.webp" class="image-item" alt="image" />
    <img src="/22.webp" class="image-item" alt="image" />
    <img src="/23.webp" class="image-item" alt="image" />
    <img src="/24.webp" class="image-item" alt="image" />
    <img src="/25.webp" class="image-item" alt="image" />
    <img src="/26.webp" class="image-item" alt="image" />
    <img src="/27.webp" class="image-item" alt="image" />
    <img src="/28.webp" class="image-item" alt="image" />
    <img src="/29.webp" class="image-item" alt="image" />
    <img src="/30.webp" class="image-item" alt="image" />
    <img src="/31.webp" class="image-item" alt="image" />
    <img src="/32.webp" class="image-item" alt="image" />
    <img src="/33.webp" class="image-item" alt="image" />
    <img src="/34.webp" class="image-item" alt="image" />
    <img src="/35.webp" class="image-item" alt="image" />
    <img src="/36.webp" class="image-item" alt="image" />
    <img src="/37.webp" class="image-item" alt="image" />
    <img src="/38.webp" class="image-item" alt="image" />
    <img src="/39.webp" class="image-item" alt="image" />
    <img src="/40.webp" class="image-item" alt="image" />
    <img src="/41.webp" class="image-item" alt="image" />
    <img src="/42.webp" class="image-item" alt="image" />
    <img src="/43.webp" class="image-item" alt="image" />
    <img src="/44.webp" class="image-item" alt="image" />
    <img src="/45.webp" class="image-item" alt="image" />
    <img src="/46.webp" class="image-item" alt="image" />
    <img src="/47.webp" class="image-item" alt="image" />
    <img src="/48.webp" class="image-item" alt="image" />
    <img src="/49.webp" class="image-item" alt="image" />
    <img src="/50.webp" class="image-item" alt="image" />
  </div>
</Layout>

<style>
  .image-stack {
    /**
    * Responsive image sizing
    * <= 480px: 100dvw
    * 480px - 1600px: Linear scale from 480px to 800px
    * >= 1600px: 800px
    * Never exceeds 80dvh
    */
    --image-size: min(100dvw, calc((2400px + 200dvw) / 7), 800px, 80dvh);

    /* Center child image */
    display: flex;
    align-items: center;
    justify-content: center;

    /* Full screen */
    width: 100dvw;
    height: 100dvh;

    /* Optimize performance and prevent mobile scroll */
    contain: content;
  }

  .image-item {
    /* Overlap all images */
    position: absolute;

    /* Max Size Limit */
    max-width: var(--image-size);
    max-height: var(--image-size);

  /* 3D perspective effect and scale */
  transform: perspective(none) translate3d(var(--offset-x, 0), var(--offset-y, 0), 0) rotateX(-45deg) rotateY(-45deg) scale(var(--image-scale));
  transition: transform 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);

  /* Cursor style */
  cursor: zoom-in;

  /* Optimize performance */
  backface-visibility: hidden;
  will-change: transform;
}

.image-item.zoomed {
  transform: perspective(800px) translate3d(var(--offset-x, 0), var(--offset-y, 0), 0) rotateX(0deg) rotateY(0deg) scale(1);
  cursor: zoom-out;
}

.image-stack.loading .image-item {
  transition: transform 0.8s cubic-bezier(0.645, 0.045, 0.355, 1);
}
</style>

<script>
const stackConfig = {
  spacing: 70,
  slope: -0.6,
  delay: 1000,
}

/**
 * Responsive image scale
 * <= 480px: 0.5
 * 480px - 1600px: Linear scale from 0.5 to 0.33
 * >= 1600px: 0.33
 */
function calculateImageScale() {
  const width = window.innerWidth
  const scale = Math.max(0.33, Math.min(0.5, 0.5 - (width - 480) * 0.17 / 1120))
  return scale.toString()
}

function updateImageScale() {
  const imageStack = document.querySelector('.image-stack') as HTMLElement
  imageStack?.style.setProperty('--image-scale', calculateImageScale())
}

function setupStackLayout() {
  setTimeout(() => {
    const imageStack = document.querySelector('.image-stack')
    const images = document.querySelectorAll('.image-item')
    const centerIndex = Math.floor(images.length / 2)

    // Add loading class
    imageStack?.classList.add('loading')

    images.forEach((element, index) => {
      const image = element as HTMLImageElement

      // Calculate position
      const relativeIndex = centerIndex - index
      const offsetX = relativeIndex * stackConfig.spacing
      const offsetY = relativeIndex * stackConfig.spacing * stackConfig.slope

      // Apply styles
      image.style.setProperty('--offset-x', `${offsetX}px`)
      image.style.setProperty('--offset-y', `${offsetY}px`)
    })

    // Remove loading class after delay
    setTimeout(() => {
      imageStack?.classList.remove('loading')
    }, 800)
  }, stackConfig.delay)
}

function handleClick(event: MouseEvent) {
  const target = event.target as HTMLElement

  // Find closest image and toggle zoom class
  target.closest('.image-item')?.classList.toggle('zoomed')
}

document.addEventListener('astro:page-load', () => setupStackLayout())
window.addEventListener('resize', updateImageScale)
document.addEventListener('click', handleClick)
updateImageScale()
setupStackLayout()
</script>
