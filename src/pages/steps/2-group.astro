---
import Layout from '../../layouts/Layout.astro'
---

<Layout>
  <div class="image-stack">
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/01.webp" class="image-item" alt="image" />
    </div>
    <div class="image-wrapper">
      <img src="/02.webp" class="image-item" alt="image" />
    </div>
  </div>
</Layout>

<style>
.image-stack {
  /* Full screen */
  width: 100dvw;
  height: 100dvh;

  /* Center child image wrapper */
  display: flex;
  align-items: center;
  justify-content: center;

  /* Optimize performance and prevent mobile scroll */
  contain: content;
}

.image-wrapper {
  /* Overlap all wrappers */
  position: absolute;

  /* Control child image dimensions */
  width: min(240px, 24dvh, 28.5dvw);
  aspect-ratio: 1;

  /* Center child image */
  display: flex;
  align-items: center;
  justify-content: center;

  /* Stack layout */
  transform: translate3d(var(--offset-x, 0), var(--offset-y, 0), 0);
  transition: transform 0.8s cubic-bezier(0.645, 0.045, 0.355, 1);

  /* Cursor style */
  pointer-events: none;

  /* Optimize performance */
  contain: layout style;
  will-change: transform;
}

.image-item {
  /* Image sizing and fit */
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;

  /* 3D perspective effect and scale */
  transform: perspective(5000px) rotateX(-45deg) rotateY(-45deg) scale(1);
  transition: transform 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);

  /* Handle click events */
  cursor: zoom-in;
  pointer-events: auto;

  /* Optimize performance */
  backface-visibility: hidden;
  will-change: transform;
}

.image-item.zoomed {
  transform: perspective(800px) rotateX(0deg) rotateY(0deg) scale(3.33);
  cursor: zoom-out;
}
</style>

<script>
const stackConfig = {
  spacing: 30,
  slope: -0.6,
  delay: 1000,
}

function setupStack() {
  setTimeout(() => {
    const wrappers = document.querySelectorAll('.image-wrapper')
    const centerIndex = Math.floor(wrappers.length / 2)

    wrappers.forEach((element, index) => {
      const wrapper = element as HTMLElement

      // Calculate position
      const relativeIndex = centerIndex - index
      const offsetX = relativeIndex * stackConfig.spacing
      const offsetY = relativeIndex * stackConfig.spacing * stackConfig.slope

      // Apply styles
      wrapper.style.setProperty('--offset-x', `${offsetX}px`)
      wrapper.style.setProperty('--offset-y', `${offsetY}px`)
    })
  }, stackConfig.delay)
}

function handleClick(event: MouseEvent) {
  const target = event.target as HTMLElement

  // Find closest image and toggle zoom class
  target.closest('.image-item')?.classList.toggle('zoomed')
}

document.addEventListener('astro:page-load', () => setupStack())
document.addEventListener('click', handleClick)
setupStack()
</script>
